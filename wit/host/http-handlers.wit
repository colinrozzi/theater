package ntwk:theater;

/// The HTTP handlers interface defines the callback functions that are used
/// to handle HTTP requests and WebSocket events.
interface http-handlers {
    use types.{state};
    use http-types.{http-request, http-response};
    use websocket-types.{websocket-message};
    use host:http-types.{middleware-result};
    use host:http-framework.{handler-id};
    
    /// Called to handle an HTTP request
    handle-request: func(state: state, params: tuple<handler-id, http-request>) -> result<tuple<state, tuple<http-response>>, string>;
    
    /// Called to process a request through middleware
    handle-middleware: func(state: state, params: tuple<handler-id, http-request>) -> result<tuple<state, tuple<middleware-result>>, string>;
    
    /// Called when a WebSocket connection is established
    handle-websocket-connect: func(state: state, params: tuple<handler-id, u64, string, option<string>>) -> result<tuple<state, tuple<_>>, string>;
    
    /// Called when a WebSocket message is received
    handle-websocket-message: func(state: state, params: tuple<handler-id, u64, websocket-message>) -> result<tuple<state, tuple<list<websocket-message>>>, string>;
    
    /// Called when a WebSocket connection is closed
    handle-websocket-disconnect: func(state: state, params: tuple<handler-id, u64>) -> result<tuple<state, tuple<_>>, string>;
}
