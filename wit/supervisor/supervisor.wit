package ntwk:theater;

interface supervisor {
    // Spawn a new child actor
    spawn-child: func(manifest: string) -> result<string, string>
    
    // Get list of child IDs
    list-children: func() -> list<string>
    
    // Get status of a specific child
    get-child-status: func(child-id: string) -> result<actor-status, string>
    
    // Stop a specific child
    stop-child: func(child-id: string) -> result<unit, string>
    
    // Restart a specific child
    restart-child: func(child-id: string) -> result<unit, string>
    
    // Get latest state of a child
    get-child-state: func(child-id: string) -> result<list<u8>, string>
    
    // Get event history of a child
    get-child-events: func(child-id: string) -> result<list<chain-event>, string>

    enum actor-status {
        running,
        stopped,
        failed
    }

    record chain-event {
        event-type: string,
        data: list<u8>,
        timestamp: u64
    }
}